# Generated by Django 5.2.6 on 2025-10-07 14:22

import core.utils.custom_user_defaults
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.IntegerField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Statusses',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(default='', max_length=20)),
                ('last_name', models.CharField(default='', max_length=20)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('color', models.CharField(choices=[('blue', 'Blue'), ('indigo', 'Indigo'), ('purple', 'Purple'), ('pink', 'Pink'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('green', 'Green'), ('teal', 'Teal'), ('cyan', 'Cyan')], default='blue', max_length=6)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons/')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='backgrounds/')),
                ('lang_code', models.CharField(choices=[('en', 'English'), ('de', 'German')], default='', max_length=3)),
                ('cursor', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '  User',
                'verbose_name_plural': '  Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=1000)),
                ('created_by', models.ForeignKey(default=core.utils.custom_user_defaults.get_first_custom_user, on_delete=django.db.models.deletion.CASCADE, related_name='family_createdcustom_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Family',
                'verbose_name_plural': 'Families',
            },
        ),
        migrations.CreateModel(
            name='FamilyUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('is_manager', models.BooleanField(default=False)),
                ('custom_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_user_family_users', to=settings.AUTH_USER_MODEL)),
                ('family_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_family_users', to='core.family')),
            ],
            options={
                'verbose_name': 'Family User',
                'verbose_name_plural': 'Family Users',
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('reset_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('used', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('custom_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
